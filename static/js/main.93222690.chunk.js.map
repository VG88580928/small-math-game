{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["App","operator","answer","num1","Math","ceil","random","num2","useState","score","incorrect","warning","state","setState","inputKeyPress","e","response","parseInt","target","value","key","MainPage","className","id","autoFocus","onKeyPress","placeholder","type","restart","WinPage","onClick","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"0OAqHeA,MAlHf,WAEE,IAEIC,EACAC,EAHAC,EAAOC,KAAKC,KAAqB,GAAhBD,KAAKE,UACtBC,EAAOH,KAAKC,KAAqB,GAAhBD,KAAKE,UAG1B,OAAQF,KAAKC,KAAqB,EAAhBD,KAAKE,WACrB,KAAK,EACHL,EAAW,IACXC,EAASC,EAAOI,EAChB,MACF,KAAK,EACHN,EAAW,IACXC,EAASC,EAAOI,EAIpB,MAAyBC,mBAAS,CAChCL,KAAMA,EACNI,KAAMA,EACNN,SAAUA,EACVC,OAAQA,EACRO,MAAO,EACPC,WAAW,EACXC,QAAS,KAPX,mBAAOC,EAAP,KAAaC,EAAb,KAUA,SAASC,EAAcC,GACrB,IAAIC,EAAWC,SAASF,EAAEG,OAAOC,OACjC,GAAc,UAAVJ,EAAEK,IACJ,GAAIJ,IAAaJ,EAAMV,OAAQ,CAE7B,IAEID,EACAC,EAHAC,EAAOC,KAAKC,KAAqB,GAAhBD,KAAKE,UACtBC,EAAOH,KAAKC,KAAqB,GAAhBD,KAAKE,UAG1B,OAAQF,KAAKC,KAAqB,EAAhBD,KAAKE,WACrB,KAAK,EACHL,EAAW,IACXC,EAASC,EAAOI,EAChB,MACF,KAAK,EACHN,EAAW,IACXC,EAASC,EAAOI,EAIpBM,EAAS,2BACJD,GADG,IAENT,KAAMA,EACNI,KAAMA,EACNL,OAAQA,EACRD,SAAUA,EACVQ,MAAOG,EAAMH,MAAQ,EACrBC,WAAW,EACXC,QAAS,UAEiB,KAAnBI,EAAEG,OAAOC,MAChBN,EAAS,2BACJD,GADG,IAEND,QAAS,oCAIPC,EAAMH,MAAQ,EAChBI,EAAS,2BACJD,GADG,IAENH,MAAOG,EAAMH,MAAQ,EACrBC,WAAW,EACXC,QAAS,MAGTE,EAAS,2BACJD,GADG,IAENF,WAAW,EACXC,QAAS,MAOvB,SAASU,IACP,OACE,sBAAKC,UAAU,YAAf,UACE,8EACA,sBAAKC,GAAG,WAAWD,UAAWV,EAAMF,UAAY,YAAc,GAA9D,UAAmEE,EAAMT,KAAMS,EAAMX,SAAUW,EAAML,QACrG,uBAAOiB,WAAS,EAACC,WAAYX,EAAeY,YAAad,EAAMD,QAASgB,KAAK,SAC7E,iDAAUf,EAAMH,YAMtB,SAASmB,IACPf,EAAS,2BAAID,GAAL,IAAWH,MAAO,KAG5B,SAASoB,IACP,OACE,sBAAKP,UAAU,YAAf,UACE,2CACA,wBAAQQ,QAASF,EAAjB,wBAKN,OAAIhB,EAAMH,OAAS,EACV,cAACoB,EAAD,IAEA,cAACR,EAAD,KCrGIU,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACL,cAAC,EAAD,IACFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.93222690.chunk.js","sourcesContent":["import React,{ useState } from 'react';\nimport './App.css';\n\nfunction App() {\n  // 此段code重複出現了兩次，這邊第一次是為了確保剛進頁面時第一道題為隨機題目,只負責生成第1道題\n  let num1 = Math.ceil(Math.random() * 10)\n  let num2 = Math.ceil(Math.random() * 10)\n  let operator\n  let answer\n  switch (Math.ceil(Math.random() * 2)) {\n    case 1:\n      operator = \"+\"\n      answer = num1 + num2\n      break;\n    case 2:\n      operator = \"-\"\n      answer = num1 - num2\n      break;\n    default:\n  }\n  const [state,setState] = useState({\n    num1: num1,\n    num2: num2,\n    operator: operator,\n    answer: answer,\n    score: 0,\n    incorrect: false,\n    warning: \"\"\n  })\n\n  function inputKeyPress(e) {\n    let response = parseInt(e.target.value)\n    if (e.key === \"Enter\") {\n      if (response === state.answer) {\n        // 這邊是答對題目後生成新題目，所以負責生成第2~無限題\n        let num1 = Math.ceil(Math.random() * 10)\n        let num2 = Math.ceil(Math.random() * 10)\n        let operator\n        let answer\n        switch (Math.ceil(Math.random() * 2)) {\n          case 1:\n            operator = \"+\"\n            answer = num1 + num2\n            break;\n          case 2:\n            operator = \"-\"\n            answer = num1 - num2\n            break;\n          default:\n        }\n        setState({\n          ...state,\n          num1: num1,\n          num2: num2,\n          answer: answer,\n          operator: operator,\n          score: state.score + 1,\n          incorrect: false,\n          warning: \"\"\n        })\n      } else if (e.target.value === \"\") {\n          setState({\n            ...state,\n            warning: \"請輸入答案\"\n          })\n      } else {\n        // 這邊確保分數不會降至0分以下\n          if (state.score > 0) {\n            setState({\n              ...state,\n              score: state.score - 1,\n              incorrect: true,\n              warning: \"\"\n            })\n          } else {\n              setState({\n                ...state,\n                incorrect: true,\n                warning: \"\"\n              })\n          }\n      }\n    }\n  }\n\n  function MainPage() {\n    return (\n      <div className=\"container\">\n        <h2>勝利條件:得到5分</h2>\n        <div id=\"question\" className={state.incorrect ? \"incorrect\" : \"\"}>{state.num1}{state.operator}{state.num2}</div>\n        <input autoFocus onKeyPress={inputKeyPress} placeholder={state.warning} type=\"text\"></input>\n        <div>分數: {state.score}</div>\n      </div>\n    );\n  }\n\n  // 分數規0，自動返回主頁面\n  function restart() {\n    setState({...state,score: 0})\n  }\n\n  function WinPage() {\n    return (\n      <div className=\"container\"> \n        <h1>you win!!</h1>\n        <button onClick={restart}>Restart</button>\n      </div>\n      )\n  }\n\n  if (state.score >= 5) {\n    return <WinPage/>\n  } else {\n    return <MainPage/>\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}